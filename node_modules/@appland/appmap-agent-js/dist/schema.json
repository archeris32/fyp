[
  {
    "$id": "agent",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "directory",
      "package"
    ],
    "properties": {
      "directory": {
        "$ref": "path"
      },
      "package": {
        "$ref": "package"
      }
    }
  },
  {
    "$id": "amend-message",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "site",
      "tab",
      "payload"
    ],
    "properties": {
      "type": {
        "const": "amend"
      },
      "site": {
        "$ref": "site"
      },
      "tab": {
        "$ref": "tab"
      },
      "payload": {
        "$ref": "payload"
      }
    }
  },
  {
    "$id": "answer-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type"
    ],
    "properties": {
      "type": {
        "const": "answer"
      }
    }
  },
  {
    "$id": "apply-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "function",
      "this",
      "arguments"
    ],
    "properties": {
      "type": {
        "const": "apply"
      },
      "function": {
        "type": "string"
      },
      "this": {
        "$ref": "serial"
      },
      "arguments": {
        "type": "array",
        "items": {
          "$ref": "serial"
        }
      }
    }
  },
  {
    "$id": "array-specific",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "length"
    ],
    "properties": {
      "type": {
        "const": "array"
      },
      "length": {
        "$ref": "natural"
      }
    }
  },
  {
    "$id": "await-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "promise"
    ],
    "properties": {
      "type": {
        "const": "await"
      },
      "promise": {
        "$ref": "serial"
      }
    }
  },
  {
    "$id": "basename",
    "type": "string",
    "pattern": "^[^/.]+$"
  },
  {
    "$id": "bundle-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type"
    ],
    "properties": {
      "type": {
        "const": "bundle"
      }
    }
  },
  {
    "$id": "combinator",
    "enum": [
      "and",
      "or"
    ]
  },
  {
    "$id": "command-options",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "shell": {
        "anyOf": [
          {
            "type": "boolean"
          },
          {
            "type": "string"
          }
        ]
      },
      "cwd": {
        "$ref": "path"
      },
      "encoding": {
        "$ref": "encoding"
      },
      "env": {
        "$ref": "env"
      },
      "stdio": {
        "$ref": "stdio"
      },
      "timeout": {
        "type": "integer",
        "minimum": 0
      },
      "killSignal": {
        "$ref": "signal"
      }
    }
  },
  {
    "$id": "config",
    "$ref": "external-configuration"
  },
  {
    "$id": "cooked-agent",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "directory",
      "package"
    ],
    "properties": {
      "directory": {
        "$ref": "url"
      },
      "package": {
        "$ref": "package"
      }
    }
  },
  {
    "$id": "cooked-command-options",
    "allOf": [
      {
        "$ref": "command-options"
      },
      {
        "type": "object",
        "required": [
          "shell",
          "cwd",
          "encoding",
          "env",
          "stdio",
          "timeout",
          "killSignal"
        ]
      }
    ]
  },
  {
    "$id": "cooked-exclude",
    "type": "array",
    "items": {
      "$ref": "cooked-exclusion"
    }
  },
  {
    "$id": "cooked-exclusion",
    "type": "object",
    "required": [
      "combinator",
      "qualified-name",
      "name",
      "every-label",
      "some-label",
      "excluded",
      "recursive"
    ],
    "properties": {
      "combinator": {
        "$ref": "combinator"
      },
      "qualified-name": {
        "$ref": "criteria"
      },
      "name": {
        "$ref": "criteria"
      },
      "every-label": {
        "$ref": "criteria"
      },
      "some-label": {
        "$ref": "criteria"
      },
      "excluded": {
        "type": "boolean"
      },
      "recursive": {
        "type": "boolean"
      }
    }
  },
  {
    "$id": "cooked-log",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "level": {
        "$ref": "log-level"
      },
      "file": {
        "anyOf": [
          {
            "$ref": "url"
          },
          {
            "const": 1
          },
          {
            "const": 2
          }
        ]
      }
    }
  },
  {
    "$id": "cooked-module",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "enabled",
      "shallow",
      "inline-source",
      "exclude"
    ],
    "properties": {
      "enabled": {
        "type": "boolean"
      },
      "shallow": {
        "type": "boolean"
      },
      "inline-source": {
        "type": "boolean",
        "nullable": true
      },
      "exclude": {
        "$ref": "cooked-exclude"
      }
    }
  },
  {
    "$id": "cooked-port",
    "anyOf": [
      {
        "const": 0
      },
      {
        "const": ""
      },
      {
        "$ref": "port-number"
      },
      {
        "$ref": "url"
      }
    ]
  },
  {
    "$id": "cooked-specifier",
    "anyOf": [
      {
        "type": "boolean"
      },
      {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "base",
          "source",
          "flags"
        ],
        "properties": {
          "base": {
            "$ref": "url"
          },
          "source": {
            "type": "string"
          },
          "flags": {
            "type": "string"
          }
        }
      }
    ]
  },
  {
    "$id": "criteria",
    "anyOf": [
      {
        "type": "boolean"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "$id": "encoding",
    "enum": [
      "buffer",
      "utf8",
      "utf16le",
      "latin1"
    ]
  },
  {
    "$id": "env",
    "type": "object",
    "additionalProperties": false,
    "patternProperties": {
      "^": {
        "type": "string"
      }
    }
  },
  {
    "$id": "error-message",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "name",
      "message",
      "stack"
    ],
    "properties": {
      "type": {
        "const": "error"
      },
      "name": {
        "type": "string",
        "nullable": true
      },
      "message": {
        "type": "string",
        "nullable": true
      },
      "stack": {
        "type": "string",
        "nullable": true
      }
    }
  },
  {
    "$id": "error-specific",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "name",
      "message",
      "stack"
    ],
    "properties": {
      "type": {
        "const": "error"
      },
      "name": {
        "type": "string",
        "nullable": true
      },
      "message": {
        "type": "string",
        "nullable": true
      },
      "stack": {
        "type": "string",
        "nullable": true
      }
    }
  },
  {
    "$id": "event-message",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "site",
      "tab",
      "group",
      "time",
      "payload"
    ],
    "properties": {
      "type": {
        "const": "event"
      },
      "site": {
        "$ref": "site"
      },
      "tab": {
        "$ref": "tab"
      },
      "group": {
        "$ref": "group"
      },
      "time": {
        "type": "number"
      },
      "payload": {
        "$ref": "payload"
      }
    }
  },
  {
    "$id": "exclude",
    "type": "array",
    "items": {
      "$ref": "exclusion"
    }
  },
  {
    "$id": "exclusion",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "object",
        "properties": {
          "combinator": {
            "$ref": "combinator"
          },
          "qualified-name": {
            "$ref": "criteria"
          },
          "name": {
            "$ref": "criteria"
          },
          "every-label": {
            "$ref": "criteria"
          },
          "some-label": {
            "$ref": "criteria"
          },
          "excluded": {
            "type": "boolean"
          },
          "recursive": {
            "type": "boolean"
          }
        }
      }
    ]
  },
  {
    "$id": "extension",
    "type": "string",
    "pattern": "^\\.[^/]+$"
  },
  {
    "$id": "external-configuration",
    "type": "object",
    "properties": {
      "agent": {
        "$ref": "agent"
      },
      "repository": {
        "$ref": "repository"
      },
      "scenarios": {
        "type": "object",
        "additionalProperties": false,
        "patternProperties": {
          "^": {
            "$ref": "external-configuration"
          }
        }
      },
      "scenario": {
        "$ref": "regexp"
      },
      "recursive-process-recording": {
        "type": "boolean"
      },
      "command": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "command-options": {
        "$ref": "command-options"
      },
      "validate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "boolean"
          },
          "appmap": {
            "type": "boolean"
          }
        }
      },
      "log": {
        "$ref": "log"
      },
      "host": {
        "const": "localhost"
      },
      "session": {
        "$ref": "basename"
      },
      "trace-port": {
        "$ref": "port"
      },
      "trace-protocol": {
        "const": "TCP"
      },
      "track-port": {
        "$ref": "port"
      },
      "track-protocol": {
        "const": "HTTP/1.1"
      },
      "intercept-track-port": {
        "$ref": "regexp"
      },
      "intercept-track-protocol": {
        "const": "HTTP/1.1"
      },
      "socket": {
        "$ref": "socket"
      },
      "heartbeat": {
        "$ref": "heartbeat"
      },
      "threshold": {
        "$ref": "threshold"
      },
      "recorder": {
        "$ref": "recorder"
      },
      "inline-source": {
        "type": "boolean"
      },
      "hooks": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cjs": {
            "type": "boolean"
          },
          "esm": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "const": null
              },
              {
                "$ref": "regular-identifier"
              }
            ]
          },
          "eval": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "object",
                "properties": {
                  "hidden": {
                    "$ref": "regular-identifier"
                  },
                  "aliases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          },
          "apply": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "const": null
              },
              {
                "$ref": "regular-identifier"
              }
            ]
          },
          "http": {
            "type": "boolean"
          },
          "mysql": {
            "type": "boolean"
          },
          "pg": {
            "type": "boolean"
          },
          "sqlite3": {
            "type": "boolean"
          }
        }
      },
      "ordering": {
        "$ref": "ordering"
      },
      "default-process": {
        "type": "boolean"
      },
      "processes": {
        "anyOf": [
          {
            "$ref": "process-specifier"
          },
          {
            "type": "array",
            "items": {
              "$ref": "process-specifier"
            }
          }
        ]
      },
      "main": {
        "$ref": "path"
      },
      "engine": {
        "type": "string"
      },
      "language": {
        "$ref": "language"
      },
      "default-package": {
        "$ref": "module"
      },
      "packages": {
        "anyOf": [
          {
            "$ref": "module-specifier"
          },
          {
            "type": "array",
            "items": {
              "$ref": "module-specifier"
            }
          }
        ]
      },
      "exclude": {
        "$ref": "exclude"
      },
      "collapse-package-hierachy": {
        "type": "boolean"
      },
      "recording": {
        "$ref": "recording"
      },
      "serialization": {
        "$ref": "serialization"
      },
      "pruning": {
        "type": "boolean"
      },
      "appmap_dir": {
        "$ref": "path"
      },
      "appmap_file": {
        "$ref": "basename"
      },
      "name": {
        "type": "string"
      },
      "map-name": {
        "type": "string"
      },
      "feature": {
        "type": "string"
      },
      "feature-group": {
        "type": "string"
      },
      "labels": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "frameworks": {
        "type": "array",
        "items": {
          "$ref": "name-version"
        }
      }
    }
  },
  {
    "$id": "file-type",
    "enum": [
      "script",
      "module"
    ]
  },
  {
    "$id": "group-message",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "group",
      "child",
      "description"
    ],
    "properties": {
      "type": {
        "const": "group"
      },
      "group": {
        "$ref": "group"
      },
      "child": {
        "$ref": "group"
      },
      "description": {
        "type": "string"
      }
    }
  },
  {
    "$id": "group-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "group",
      "description"
    ],
    "properties": {
      "type": {
        "const": "group"
      },
      "group": {
        "$ref": "group"
      },
      "description": {
        "type": "string"
      }
    }
  },
  {
    "$id": "group",
    "type": "number"
  },
  {
    "$id": "hash-specific",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "length",
      "properties"
    ],
    "properties": {
      "type": {
        "const": "hash"
      },
      "length": {
        "$ref": "natural"
      },
      "properties": {
        "type": "object",
        "additionalProperties": false,
        "patternProperties": {
          "^": {
            "type": "string"
          }
        }
      }
    }
  },
  {
    "$id": "headers",
    "type": "object",
    "additionalProperties": false,
    "patternProperties": {
      "^": {
        "type": "string"
      }
    }
  },
  {
    "$id": "heartbeat",
    "$ref": "nullable-natural"
  },
  {
    "$id": "indent",
    "enum": [
      0,
      2,
      4,
      8
    ]
  },
  {
    "$id": "index",
    "$ref": "natural"
  },
  {
    "$id": "internal-configuration",
    "type": "object",
    "additionalProperties": false,
    "minProperties": 40,
    "properties": {
      "socket": {
        "$ref": "socket"
      },
      "heartbeat": {
        "$ref": "heartbeat"
      },
      "threshold": {
        "$ref": "threshold"
      },
      "scenario": {
        "$ref": "regexp"
      },
      "scenarios": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "key",
            "value",
            "base"
          ],
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "$ref": "external-configuration"
            },
            "base": {
              "$ref": "url"
            }
          }
        }
      },
      "recursive-process-recording": {
        "type": "boolean"
      },
      "command": {
        "type": "object",
        "nullable": true,
        "properties": {
          "tokens": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "source": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "command-options": {
        "$ref": "cooked-command-options"
      },
      "validate": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "message",
          "appmap"
        ],
        "properties": {
          "message": {
            "type": "boolean"
          },
          "appmap": {
            "type": "boolean"
          }
        }
      },
      "agent": {
        "anyOf": [
          {
            "const": null
          },
          {
            "$ref": "cooked-agent"
          }
        ]
      },
      "repository": {
        "$ref": "repository"
      },
      "log": {
        "$ref": "cooked-log"
      },
      "host": {
        "const": "localhost"
      },
      "session": {
        "anyOf": [
          {
            "const": null
          },
          {
            "$ref": "basename"
          }
        ]
      },
      "trace-port": {
        "$ref": "cooked-port"
      },
      "trace-protocol": {
        "const": "TCP"
      },
      "track-port": {
        "$ref": "cooked-port"
      },
      "track-protocol": {
        "const": "HTTP/1.1"
      },
      "intercept-track-port": {
        "$ref": "regexp"
      },
      "intercept-track-protocol": {
        "const": "HTTP/1.1"
      },
      "recorder": {
        "anyOf": [
          {
            "const": null
          },
          {
            "$ref": "recorder"
          }
        ]
      },
      "inline-source": {
        "type": "boolean"
      },
      "hooks": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cjs",
          "esm",
          "apply",
          "http",
          "mysql",
          "pg",
          "sqlite3"
        ],
        "properties": {
          "cjs": {
            "type": "boolean"
          },
          "esm": {
            "anyOf": [
              {
                "const": null
              },
              {
                "$ref": "regular-identifier"
              }
            ]
          },
          "eval": {
            "type": "object",
            "properties": {
              "hidden": {
                "$ref": "regular-identifier"
              },
              "aliases": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "apply": {
            "anyOf": [
              {
                "const": null
              },
              {
                "$ref": "regular-identifier"
              }
            ]
          },
          "http": {
            "type": "boolean"
          },
          "mysql": {
            "type": "boolean"
          },
          "pg": {
            "type": "boolean"
          },
          "sqlite3": {
            "type": "boolean"
          }
        }
      },
      "ordering": {
        "$ref": "ordering"
      },
      "default-process": {
        "type": "boolean"
      },
      "processes": {
        "type": "array",
        "items": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "$ref": "cooked-specifier"
            },
            {
              "type": "boolean"
            }
          ]
        }
      },
      "main": {
        "anyOf": [
          {
            "const": null
          },
          {
            "$ref": "url"
          }
        ]
      },
      "engine": {
        "type": "string",
        "nullable": true
      },
      "language": {
        "$ref": "language"
      },
      "default-package": {
        "$ref": "cooked-module"
      },
      "packages": {
        "type": "array",
        "items": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "$ref": "cooked-specifier"
            },
            {
              "$ref": "cooked-module"
            }
          ]
        }
      },
      "exclude": {
        "$ref": "cooked-exclude"
      },
      "anonymous-name-separator": {
        "$ref": "separator"
      },
      "function-name-placeholder": {
        "type": "string"
      },
      "collapse-package-hierachy": {
        "type": "boolean"
      },
      "recording": {
        "anyOf": [
          {
            "const": null
          },
          {
            "$ref": "recording-object"
          }
        ]
      },
      "serialization": {
        "allOf": [
          {
            "$ref": "serialization"
          },
          {
            "type": "object",
            "required": [
              "maximum-print-length",
              "maximum-properties-length",
              "impure-printing",
              "impure-constructor-naming",
              "impure-array-inspection",
              "impure-error-inspection",
              "impure-hash-inspection"
            ]
          }
        ]
      },
      "pruning": {
        "type": "boolean"
      },
      "appmap_dir": {
        "$ref": "url"
      },
      "appmap_file": {
        "anyOf": [
          {
            "$ref": "basename"
          },
          {
            "const": null
          }
        ]
      },
      "name": {
        "type": "string",
        "nullable": true
      },
      "map-name": {
        "type": "string",
        "nullable": true
      },
      "feature": {
        "type": "string",
        "nullable": true
      },
      "feature-group": {
        "type": "string",
        "nullable": true
      },
      "labels": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "frameworks": {
        "type": "array",
        "items": {
          "$ref": "name-version"
        }
      }
    }
  },
  {
    "$id": "jump-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type"
    ],
    "properties": {
      "type": {
        "const": "jump"
      }
    }
  },
  {
    "$id": "language",
    "const": "javascript"
  },
  {
    "$id": "log-level",
    "enum": [
      "debug",
      "info",
      "warning",
      "error",
      "off"
    ]
  },
  {
    "$id": "log",
    "anyOf": [
      {
        "$ref": "log-level"
      },
      {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "level": {
            "$ref": "log-level"
          },
          "file": {
            "anyOf": [
              {
                "$ref": "path"
              },
              {
                "const": 1
              },
              {
                "const": 2
              }
            ]
          }
        }
      }
    ]
  },
  {
    "$id": "message",
    "anyOf": [
      {
        "$ref": "start-message"
      },
      {
        "$ref": "stop-message"
      },
      {
        "$ref": "error-message"
      },
      {
        "$ref": "source-message"
      },
      {
        "$ref": "group-message"
      },
      {
        "$ref": "event-message"
      },
      {
        "$ref": "amend-message"
      }
    ]
  },
  {
    "$id": "module-specifier",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "regexp"
        ],
        "properties": {
          "regexp": {
            "$ref": "regexp"
          },
          "flags": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "shallow": {
            "type": "boolean"
          },
          "exclude": {
            "$ref": "exclude"
          },
          "inline-source": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "glob"
        ],
        "properties": {
          "glob": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "shallow": {
            "type": "boolean"
          },
          "exclude": {
            "$ref": "exclude"
          },
          "inline-source": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string"
          },
          "recursive": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "shallow": {
            "type": "boolean"
          },
          "exclude": {
            "$ref": "exclude"
          },
          "inline-source": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "dist"
        ],
        "properties": {
          "dist": {
            "type": "string"
          },
          "recursive": {
            "type": "boolean"
          },
          "external": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "shallow": {
            "type": "boolean"
          },
          "exclude": {
            "$ref": "exclude"
          },
          "inline-source": {
            "type": "boolean",
            "nullable": true
          }
        }
      }
    ]
  },
  {
    "$id": "module",
    "anyOf": [
      {
        "type": "boolean"
      },
      {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "shallow": {
            "type": "boolean"
          },
          "inline-source": {
            "type": "boolean",
            "nullable": true
          },
          "exclude": {
            "$ref": "exclude"
          }
        }
      }
    ]
  },
  {
    "$id": "name-version-object",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "name",
      "version"
    ],
    "properties": {
      "name": {
        "type": "string"
      },
      "version": {
        "type": "string",
        "nullable": true
      }
    }
  },
  {
    "$id": "name-version-string",
    "type": "string",
    "pattern": "^[^@]+(@[^@]+)?$"
  },
  {
    "$id": "name-version",
    "anyOf": [
      {
        "$ref": "name-version-string"
      },
      {
        "$ref": "name-version-object"
      }
    ]
  },
  {
    "$id": "natural",
    "type": "integer",
    "minimum": 0,
    "maximum": 9007199254740991
  },
  {
    "$id": "nullable-natural",
    "anyOf": [
      {
        "const": null
      },
      {
        "$ref": "natural"
      }
    ]
  },
  {
    "$id": "ordering",
    "enum": [
      "chronological",
      "causal"
    ]
  },
  {
    "$id": "package",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "name",
      "version",
      "homepage"
    ],
    "properties": {
      "name": {
        "type": "string"
      },
      "version": {
        "type": "string"
      },
      "homepage": {
        "type": "string",
        "nullable": true
      }
    }
  },
  {
    "$id": "path",
    "type": "string"
  },
  {
    "$id": "payload",
    "anyOf": [
      {
        "$ref": "bundle-payload"
      },
      {
        "$ref": "jump-payload"
      },
      {
        "$ref": "apply-payload"
      },
      {
        "$ref": "return-payload"
      },
      {
        "$ref": "throw-payload"
      },
      {
        "$ref": "await-payload"
      },
      {
        "$ref": "resolve-payload"
      },
      {
        "$ref": "reject-payload"
      },
      {
        "$ref": "yield-payload"
      },
      {
        "$ref": "resume-payload"
      },
      {
        "$ref": "query-payload"
      },
      {
        "$ref": "answer-payload"
      },
      {
        "$ref": "request-payload"
      },
      {
        "$ref": "response-payload"
      },
      {
        "$ref": "group-payload"
      },
      {
        "$ref": "ungroup-payload"
      }
    ]
  },
  {
    "$id": "port-number",
    "type": "integer",
    "minimum": 1,
    "maximum": 65535
  },
  {
    "$id": "port",
    "anyOf": [
      {
        "const": 0
      },
      {
        "const": ""
      },
      {
        "$ref": "port-number"
      },
      {
        "$ref": "path"
      }
    ]
  },
  {
    "$id": "primitive-serial",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "print"
    ],
    "properties": {
      "type": {
        "enum": [
          "null",
          "undefined",
          "boolean",
          "number",
          "string",
          "bigint"
        ]
      },
      "print": {
        "type": "string"
      }
    }
  },
  {
    "$id": "process-specifier",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "regexp"
        ],
        "properties": {
          "regexp": {
            "$ref": "regexp"
          },
          "flags": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "glob"
        ],
        "properties": {
          "glob": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string"
          },
          "recursive": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "dist"
        ],
        "properties": {
          "dist": {
            "type": "string"
          },
          "recursive": {
            "type": "boolean"
          },
          "external": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      }
    ]
  },
  {
    "$id": "query-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "database",
      "version",
      "sql",
      "parameters"
    ],
    "properties": {
      "type": {
        "const": "query"
      },
      "database": {
        "type": "string",
        "nullable": true
      },
      "version": {
        "type": "string",
        "nullable": true
      },
      "sql": {
        "type": "string"
      },
      "parameters": {
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "serial"
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
              "^": {
                "$ref": "serial"
              }
            }
          }
        ]
      }
    }
  },
  {
    "$id": "recorder",
    "enum": [
      "process",
      "mocha",
      "manual",
      "remote"
    ]
  },
  {
    "$id": "recording-object",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "defined-class",
      "method-id"
    ],
    "properties": {
      "defined-class": {
        "type": "string"
      },
      "method-id": {
        "type": "string"
      }
    }
  },
  {
    "$id": "recording-string",
    "type": "string",
    "pattern": "^[^.]+.[^.]+$"
  },
  {
    "$id": "recording",
    "anyOf": [
      {
        "$ref": "recording-string"
      },
      {
        "$ref": "recording-object"
      }
    ]
  },
  {
    "$id": "reference-serial",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "print",
      "index",
      "constructor",
      "specific"
    ],
    "properties": {
      "type": {
        "enum": [
          "object",
          "function"
        ]
      },
      "print": {
        "type": "string"
      },
      "index": {
        "$ref": "natural"
      },
      "constructor": {
        "type": "string",
        "nullable": true
      },
      "specific": {
        "anyOf": [
          {
            "const": null
          },
          {
            "$ref": "error-specific"
          },
          {
            "$ref": "array-specific"
          },
          {
            "$ref": "hash-specific"
          }
        ]
      }
    }
  },
  {
    "$id": "regexp",
    "type": "string"
  },
  {
    "$id": "regular-identifier",
    "type": "string",
    "pattern": "^[a-zA-Z_$][a-zA-Z_$-9]*$"
  },
  {
    "$id": "reject-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "error"
    ],
    "properties": {
      "type": {
        "const": "reject"
      },
      "error": {
        "$ref": "serial"
      }
    }
  },
  {
    "$id": "repository",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "directory",
      "history",
      "package"
    ],
    "properties": {
      "directory": {
        "$ref": "url"
      },
      "history": {
        "type": "object",
        "nullable": true
      },
      "package": {
        "anyOf": [
          {
            "const": null
          },
          {
            "$ref": "package"
          }
        ]
      }
    }
  },
  {
    "$id": "request-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "side",
      "protocol",
      "method",
      "url",
      "route",
      "headers",
      "body"
    ],
    "properties": {
      "type": {
        "const": "request"
      },
      "side": {
        "$ref": "side"
      },
      "protocol": {
        "type": "string"
      },
      "method": {
        "type": "string"
      },
      "url": {
        "type": "string"
      },
      "route": {
        "type": "string",
        "nullable": true
      },
      "headers": {
        "$ref": "headers"
      },
      "body": {
        "$ref": "serial"
      }
    }
  },
  {
    "$id": "resolve-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "result"
    ],
    "properties": {
      "type": {
        "const": "resolve"
      },
      "result": {
        "$ref": "serial"
      }
    }
  },
  {
    "$id": "response-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "side",
      "status",
      "message",
      "headers",
      "body"
    ],
    "properties": {
      "type": {
        "const": "response"
      },
      "side": {
        "$ref": "side"
      },
      "status": {
        "type": "integer"
      },
      "message": {
        "type": "string"
      },
      "headers": {
        "$ref": "headers"
      },
      "body": {
        "$ref": "serial"
      }
    }
  },
  {
    "$id": "resume-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type"
    ],
    "properties": {
      "type": {
        "const": "resume"
      }
    }
  },
  {
    "$id": "return-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "function",
      "result"
    ],
    "properties": {
      "type": {
        "const": "return"
      },
      "function": {
        "type": "string"
      },
      "result": {
        "$ref": "serial"
      }
    }
  },
  {
    "$id": "separator",
    "type": "string",
    "pattern": "^\\P{ID_Continue}$"
  },
  {
    "$id": "serial",
    "anyOf": [
      {
        "const": null
      },
      {
        "$ref": "primitive-serial"
      },
      {
        "$ref": "symbol-serial"
      },
      {
        "$ref": "reference-serial"
      }
    ]
  },
  {
    "$id": "serialization",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "maximum-print-length": {
        "type": "number",
        "nullable": true,
        "minimum": 0
      },
      "maximum-properties-length": {
        "type": "number",
        "nullable": true,
        "minimum": 0
      },
      "impure-printing": {
        "type": "boolean"
      },
      "impure-constructor-naming": {
        "type": "boolean"
      },
      "impure-array-inspection": {
        "type": "boolean"
      },
      "impure-error-inspection": {
        "type": "boolean"
      },
      "impure-hash-inspection": {
        "type": "boolean"
      }
    }
  },
  {
    "$id": "side",
    "enum": [
      "client",
      "server"
    ]
  },
  {
    "$id": "signal",
    "enum": [
      "SIGINT",
      "SIGTERM",
      "SIGKILL"
    ]
  },
  {
    "$id": "site",
    "enum": [
      "begin",
      "end",
      "before",
      "after"
    ]
  },
  {
    "$id": "socket",
    "enum": [
      "unix",
      "net"
    ]
  },
  {
    "$id": "source-map",
    "type": "object",
    "required": [
      "version",
      "sources",
      "names",
      "mappings"
    ],
    "properties": {
      "version": {
        "const": 3
      },
      "file": {
        "type": "string",
        "nullable": true
      },
      "sourceRoot": {
        "type": "string",
        "nullable": true
      },
      "sources": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "sourcesContent": {
        "type": "array",
        "nullable": true,
        "items": {
          "type": "string",
          "nullable": true
        }
      },
      "names": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "mappings": {
        "type": "string"
      }
    }
  },
  {
    "$id": "source-message",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "content",
      "url",
      "shallow",
      "inline",
      "exclude"
    ],
    "properties": {
      "type": {
        "const": "source"
      },
      "content": {
        "type": "string",
        "nullable": true
      },
      "url": {
        "$ref": "url"
      },
      "shallow": {
        "type": "boolean"
      },
      "inline": {
        "type": "boolean"
      },
      "exclude": {
        "type": "array",
        "items": {
          "$ref": "cooked-exclusion"
        }
      }
    }
  },
  {
    "$id": "start-message",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "track",
      "configuration",
      "url"
    ],
    "properties": {
      "type": {
        "const": "start"
      },
      "track": {
        "type": "string"
      },
      "configuration": {
        "$ref": "external-configuration"
      },
      "url": {
        "anyOf": [
          {
            "const": null
          },
          {
            "$ref": "url"
          }
        ]
      }
    }
  },
  {
    "$id": "stdio-stream",
    "enum": [
      "ignore",
      "pipe",
      "inherit"
    ]
  },
  {
    "$id": "stdio",
    "anyOf": [
      {
        "$ref": "stdio-stream"
      },
      {
        "type": "array",
        "minItems": 3,
        "maxItems": 3,
        "items": [
          {
            "$ref": "stdio-stream"
          },
          {
            "$ref": "stdio-stream"
          },
          {
            "$ref": "stdio-stream"
          }
        ]
      }
    ]
  },
  {
    "$id": "stop-message",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "track",
      "status"
    ],
    "properties": {
      "type": {
        "const": "stop"
      },
      "track": {
        "type": "string"
      },
      "status": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      }
    }
  },
  {
    "$id": "symbol-serial",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "print",
      "index"
    ],
    "properties": {
      "type": {
        "const": "symbol"
      },
      "print": {
        "type": "string"
      },
      "index": {
        "$ref": "natural"
      }
    }
  },
  {
    "$id": "tab",
    "$ref": "natural"
  },
  {
    "$id": "threshold",
    "$ref": "nullable-natural"
  },
  {
    "$id": "throw-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "function",
      "error"
    ],
    "properties": {
      "type": {
        "const": "throw"
      },
      "function": {
        "type": "string"
      },
      "error": {
        "$ref": "serial"
      }
    }
  },
  {
    "$id": "time",
    "type": "number"
  },
  {
    "$id": "ungroup-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "group"
    ],
    "properties": {
      "type": {
        "const": "ungroup"
      },
      "group": {
        "$ref": "group"
      }
    }
  },
  {
    "$id": "url",
    "type": "string",
    "pattern": "^[a-z]+://"
  },
  {
    "$id": "yield-payload",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "type",
      "iterator"
    ],
    "properties": {
      "type": {
        "const": "yield"
      },
      "iterator": {
        "$ref": "serial"
      }
    }
  }
]